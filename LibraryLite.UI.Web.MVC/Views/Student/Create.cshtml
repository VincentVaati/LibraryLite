@model LibraryLite.UI.Web.MVC.Presentation.ViewModels.StudentViewModel

@{
    ViewBag.Title = "Create student";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="form-container">
    <div class="form-wrapper">
        @using (Html.BeginForm("Create", "Student", FormMethod.Post, new { role = "form" }))
        {
            @*<button class="form-btn-hide">
                <i class="fa fa-close" aria-hidden="true"></i>
            </button>*@

            <form class="form validate-form">
                <span class="form-title">
                    Add student
                </span>
                @Html.AntiForgeryToken()
                @Html.ValidationSummary()
                <div class="input-wrapper validate-input" data-validate="Username is required">
                    <span class="input-label">Student number</span>
                    @Html.TextBoxFor(m => m.StudentNumber, new { @class = "input", @placeholder = "Enter student number" })
                    <span class="input-focus"></span>
                </div>
                <div class="input-wrapper validate-input" data-validate="Username is required">
                    <span class="input-label">First name</span>
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "input", @placeholder = "Enter student number" })
                    <span class="input-focus"></span>
                </div>
                <div class="input-wrapper validate-input" data-validate="Username is required">
                    <span class="input-label">Last name</span>
                    @Html.TextBoxFor(m => m.LastName, new { @class = "input", @placeholder = "Enter student number" })
                    <span class="input-focus"></span>
                </div>
                <div class="input-wrapper validate-input">
                    <span class="input-label">Assign class</span><br />
                    @Html.DropDownList("ClassId", ViewBag.ClassId as IEnumerable<SelectListItem>, "- select class -", new {@id ="ClassId" })
                    <span class="input-focus"></span>
                </div>
                @*<div class="input-wrapper validate-input">
                    <span class="input-label">Assign Class</span><br />
                    @Html.TextBoxFor(m => m.ClassId, new { @class = "live-search-box", @placeholder = "Search class" })
                    <ul id="search-list" class="live-search-list list-close">
                        @foreach (var item in ViewBag.ClassId as IEnumerable<SelectListItem>)
                        {
                            <li id="@item.Value">@item.Text</li>
                        }
                    </ul>

                </div>*@
                <div class="form-container-form-btn">
                    <button class="form-btn">
                        <span>
                            Add student
                            <i class="fa fa-long-arrow-right m-l-7" aria-hidden="true"></i>
                        </span>
                    </button>
                </div>
            </form>
        }
    </div>
</div>







 

