@model LibraryLite.UI.Web.MVC.Presentation.ViewModels.BookLoanRequestViewModel

@{
    ViewBag.Title = "Book loans";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="list">
    <div class="form-group">
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-6">
                        @Html.DropDownList("Filter by student", ViewBag.StudentSelectionList as IEnumerable<SelectListItem>, "- All book loans -", new { @id = "studentId", @class = "form-control" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownList("View reports", ViewBag.Reports as IEnumerable<SelectListItem>, "- Reports -", new { @id = "reportId", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="">
                    <p>Filter reports by date</p>
                    <input type="date" class="form-control" id="date">
                </div>
                <div class="">
                    <p>Filter reports by month</p>
                    @Html.DropDownList("Reports filter", ViewBag.Months as IEnumerable<SelectListItem>, "- All months -", new { @id = "monthId", @class = "form-control" })
                </div>
                <div class="">
                    <p>Year</p>
                    <input id="year" name="year" type="number" min="1900" max="2099" step="1" value="2018" class="form-control" />
                </div>
            </div>
        </div>
    </div>
    <h2>Book loans</h2>
    <p>View,add new or change existing book loan information</p>
    <a href="@Url.Action("Create","BookLoan")"><i class='fa fa-plus-circle'></i>Loan book</a>

    <table id="tableId" class="search table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.StudentId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookId)
                </th>
                <th>
                    @Html.DisplayName("Book title")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfIssue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DueDate)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>    
</div>
<script>
    $(document).ready(function () {
        function Contains(text_one,text_two){
            if(text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#search").keyup(function(){
            var searchText =$("#search").val().toLowerCase();
            $("#tableId").each(function () {
                if(!Contains($(this).text().toLowerCase(),searchText)){
                    $(this).hide();
                }
                else{
                    $(this).show();
                }
            });
        });
    });
    var deleteUrl = '@Url.Action("ReturnBook")';
    $.ajax({
        url: '@Url.Action("GetBookLoans")',
        verb: 'POST',
        dataType: 'json',
        data: { id: $("#studentId").val() },
        contentType: 'application/json; charset=utf-8',
        success: function (data) {
            ($('#tableId tbody').empty());
            var items = "";
            $.each(data, function (i, item) {
                var rows = "<tr>"
                + "<td>" + item.FirstName + "</td>"
                + "<td>" + item.LastName + "</td>"
                + "<td>" + item.BookTitle + "</td>"
                + "<td>" + item.DateOfIssue + "</td>"
                + "<td>" + item.DueDate + "</td>"
                + '<td><a href=\"' + deleteUrl +"/"+ item.Id +'"><i class="fa fa-edit"></i>Return book</a></td>'
                + "</tr>"
                $('#tableId tbody').append(rows);
            });
        },
        error: function (ex) {
            var r = ex.responseText;
        }
    });
    $("#monthId").on("change", function () {

        var filterViewModel = {
            MonthId: $("#monthId").val(),
            Year: $("#year").val(),
            Date: $("#date").val()
        };
        

        ($('#tableId tbody').empty());

            $.ajax({
                url: '@Url.Action("GetBookLoansbyMonth")',
                verb: 'POST',
                data: filterViewModel,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    var items = "";
                    $.each(data, function (i, item) {
                        var rows = "<tr>"
                        + "<td>" + item.FirstName + "</td>"
                        + "<td>" + item.LastName + "</td>"
                        + "<td>" + item.BookTitle + "</td>"
                        + "<td>" + item.DateOfIssue + "</td>"
                        + "<td>" + item.Penalty + "</td>"
                        + '<td><a href=\"' + deleteUrl + "/" + item.Id + '"><i class="fa fa-edit"></i>Return book</a></td>'
                        + "</tr>"
                        $('#tableId tbody').append(rows);
                    });
                },
                error: function (ex) {
                    var r = ex.responseText;
                    //alert("Message: " + r.Message);
                    //alert("StackTrace: " + r.StackTrace);
                    //alert("ExceptionType: " + r.ExceptionType);
                }
            });
    });
    $("#reportId").on("change", function () {
        var reportId = $("#reportId").val();
        ($('#tableId tbody').empty());

        if (reportId != null || reportId != "") {
            $.ajax({
                url: '@Url.Action("GetLoans")',
                verb: 'POST',
                dataType: 'json',
                data: { id: $("#reportId").val() },
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    var items = "";
                    $.each(data, function (i, item) {
                        var rows = "<tr>"
                        + "<td>" + item.FirstName + "</td>"
                        + "<td>" + item.LastName + "</td>"
                        + "<td>" + item.BookTitle + "</td>"
                        + "<td>" + item.DateOfIssue + "</td>"
                        + "<td>" + item.DueDate + "</td>"
                        + '<td><a href=\"' + deleteUrl + "/" + item.Id + '"><i class="fa fa-edit"></i>Return book</a></td>'
                        + "</tr>"
                        $('#tableId tbody').append(rows);
                    });
                },
                error: function (ex) {
                    var r = ex.responseText;
                    //alert("Message: " + r.Message);
                    //alert("StackTrace: " + r.StackTrace);
                    //alert("ExceptionType: " + r.ExceptionType);
                }
            });
        }
    });
    $("#studentId").change(function () {
        var studentId = $("#studentId").val();
 
       ($('#tableId tbody').empty());
        if (studentId != null || studentId != "") {
            $.ajax({
                url: '@Url.Action("GetBookLoans")',
                verb: 'POST',
                dataType: 'json',
                data: { id: $("#studentId").val() },
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    var items = "";
                    $.each(data, function (i, item) {
                        var isBookReturned;
                        if (item.DateReturned == null)
                        {
                            isBookReturned = "Not returned";
                        }
                        else {
                            isBookReturned = "Returned";
                        }
                        var rows = "<tr>"
                        + "<td>" + item.FirstName + "</td>"
                        + "<td>" + item.LastName + "</td>"
                        + "<td>" + item.BookTitle + "</td>"
                        + "<td>" + item.DateOfIssue + "</td>"
                        + "<td>" + item.DueDate + "</td>"
                        + "<td>" + isBookReturned + "</td>"
                        + '<td><a href=\"' + deleteUrl + "/" + item.Id + '"><i class="fa fa-edit"></i>Return book</a></td>'
                        + "</tr>"
                        $('#tableId tbody').append(rows);
                    });
                },
                error: function (ex) {
                    var r = ex.responseText;
                    //alert("Message: " + r.Message);
                    //alert("StackTrace: " + r.StackTrace);
                    //alert("ExceptionType: " + r.ExceptionType);
                }
            });
        }
    });
</script>
 